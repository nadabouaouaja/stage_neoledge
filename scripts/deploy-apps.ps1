# Script PowerShell pour d√©ployer les applications sur Azure App Service
# Optimis√© pour les images Docker

param(
    [string]$ResourceGroupName = "ContextualImageDescriptionApp-RG",
    [string]$AcrName = "contextualimagedescriptionappacr",
    [string]$BackendAppName = "contextualimagedescriptionapp-backend",
    [string]$FrontendAppName = "contextualimagedescriptionapp-frontend"
)

Write-Host "üöÄ D√©ploiement des applications sur Azure App Service" -ForegroundColor Green

# 1. V√©rifier la connexion Azure
Write-Host "üìã V√©rification de la connexion Azure..." -ForegroundColor Yellow
az account show
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Veuillez vous connecter √† Azure avec 'az login'" -ForegroundColor Red
    exit 1
}

# 2. Obtenir l'URL du registre
$AcrLoginServer = az acr show --name $AcrName --query loginServer --output tsv
Write-Host "üì¶ URL du registre: $AcrLoginServer" -ForegroundColor Cyan

# 3. Obtenir les credentials ACR
Write-Host "üîë R√©cup√©ration des credentials ACR..." -ForegroundColor Yellow
$AcrCredentials = az acr credential show --name $AcrName --query "username" --output tsv
$AcrPassword = az acr credential show --name $AcrName --query "passwords[0].value" --output tsv

# 4. Configurer l'App Service backend pour Docker
Write-Host "üîß Configuration de l'App Service backend..." -ForegroundColor Yellow
az webapp config container set --resource-group $ResourceGroupName --name $BackendAppName `
    --docker-custom-image-name "$AcrLoginServer/backend:latest" `
    --docker-registry-server-url "https://$AcrLoginServer" `
    --docker-registry-server-user $AcrCredentials `
    --docker-registry-server-password $AcrPassword

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ App Service backend configur√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur lors de la configuration du backend" -ForegroundColor Red
    exit 1
}

# 5. Configurer l'App Service frontend pour Docker
Write-Host "üé® Configuration de l'App Service frontend..." -ForegroundColor Yellow
az webapp config container set --resource-group $ResourceGroupName --name $FrontendAppName `
    --docker-custom-image-name "$AcrLoginServer/frontend:latest" `
    --docker-registry-server-url "https://$AcrLoginServer" `
    --docker-registry-server-user $AcrCredentials `
    --docker-registry-server-password $AcrPassword

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ App Service frontend configur√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur lors de la configuration du frontend" -ForegroundColor Red
    exit 1
}

# 6. Red√©marrer les applications
Write-Host "üîÑ Red√©marrage des applications..." -ForegroundColor Yellow
az webapp restart --resource-group $ResourceGroupName --name $BackendAppName
az webapp restart --resource-group $ResourceGroupName --name $FrontendAppName

# 7. Attendre que les applications soient pr√™tes
Write-Host "‚è≥ Attente du d√©marrage des applications..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

# 8. V√©rifier le statut des applications
Write-Host "üìä V√©rification du statut des applications..." -ForegroundColor Yellow

$BackendStatus = az webapp show --resource-group $ResourceGroupName --name $BackendAppName --query "state" --output tsv
$FrontendStatus = az webapp show --resource-group $ResourceGroupName --name $FrontendAppName --query "state" --output tsv

Write-Host "Backend status: $BackendStatus" -ForegroundColor Cyan
Write-Host "Frontend status: $FrontendStatus" -ForegroundColor Cyan

# 9. Afficher les URLs des applications
Write-Host "üåê URLs des applications:" -ForegroundColor Green
Write-Host "Backend: https://$BackendAppName.azurewebsites.net" -ForegroundColor Cyan
Write-Host "Frontend: https://$FrontendAppName.azurewebsites.net" -ForegroundColor Cyan

# 10. Tester les applications
Write-Host "üß™ Test des applications..." -ForegroundColor Yellow
try {
    $BackendResponse = Invoke-WebRequest -Uri "https://$BackendAppName.azurewebsites.net/health" -UseBasicParsing -TimeoutSec 30
    Write-Host "‚úÖ Backend accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Backend pas encore accessible (normal au premier d√©marrage)" -ForegroundColor Yellow
}

try {
    $FrontendResponse = Invoke-WebRequest -Uri "https://$FrontendAppName.azurewebsites.net" -UseBasicParsing -TimeoutSec 30
    Write-Host "‚úÖ Frontend accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Frontend pas encore accessible (normal au premier d√©marrage)" -ForegroundColor Yellow
}

Write-Host "üéâ D√©ploiement termin√©!" -ForegroundColor Green
Write-Host "Les applications peuvent prendre quelques minutes pour √™tre compl√®tement accessibles." -ForegroundColor Yellow 